Configuration:
  name: PropertiesConfig
  properties:
    property:
    - name: logsDir
      value: logs
    - name: defaultLayoutPattern
      value: '%d{yy/MM/dd HH:mm:ss.SSS} %p: (%F:%L) %m%n'
    - name: immediateFlush
      value: 'false'
    - name: sizeRollingSize
      value: 500MB
    - name: maxRolling
      value: '50'
    - name: fileRollingPattern
      value: '%d{yyyy-MM-dd}-%i'
    - name: timeRollingInterval
      value: '1'
  appenders:
    RollingFile:
    - name: CollectorLog
      fileName: ${logsDir}/collector.log
      immediateFlush: ${immediateFlush}
      filePattern: ${logsDir}/collector.log.${fileRollingPattern}
      policies:
        type: Policies
        size:
          type: SizeBasedTriggeringPolicy
          size: ${sizeRollingSize}
        time:
          type: TimeBasedTriggeringPolicy
          interval: ${timeRollingInterval}
      strategy:
        type: DefaultRolloverStrategy
        max: ${maxRolling}
      PatternLayout:
        pattern: ${defaultLayoutPattern}
    - name: SpringBeanDestroyLogAppender
      fileName: ${logsDir}/collector.log
      filePattern: ${logsDir}/collector.log.${fileRollingPattern}
      immediateFlush: 'true'
      policies:
        type: Policies
        size:
          type: SizeBasedTriggeringPolicy
          size: ${sizeRollingSize}
        time:
          type: TimeBasedTriggeringPolicy
          interval: ${timeRollingInterval}
      strategy:
        type: DefaultRolloverStrategy
        max: ${maxRolling}
      PatternLayout:
        pattern: ${defaultLayoutPattern}
      Filters:
        OgLoggingExceptionToAlertFilter: {}
    - name: UnexpectedErrorLog
      fileName: ${logsDir}/unexpectedError.log
      immediateFlush: ${immediateFlush}
      filePattern: ${logsDir}/unexpectedError.log.${fileRollingPattern}
      policies:
        type: Policies
        size:
          type: SizeBasedTriggeringPolicy
          size: ${sizeRollingSize}
        time:
          type: TimeBasedTriggeringPolicy
          interval: ${timeRollingInterval}
      strategy:
        type: DefaultRolloverStrategy
        max: ${maxRolling}
      PatternLayout:
        pattern: ${defaultLayoutPattern}
    - name: UnexpectedRawErrorLog
      fileName: ${logsDir}/rawUnexpectedError.log
      immediateFlush: ${immediateFlush}
      filePattern: ${logsDir}/rawUnexpectedError.log.${fileRollingPattern}
      policies:
        type: Policies
        size:
          type: SizeBasedTriggeringPolicy
          size: ${sizeRollingSize}
        time:
          type: TimeBasedTriggeringPolicy
          interval: ${timeRollingInterval}
      strategy:
        type: DefaultRolloverStrategy
        max: ${maxRolling}
      PatternLayout:
        pattern: ${defaultLayoutPattern}
    - name: HibernateAppender
      fileName: ${logsDir}/hibernate.log
      immediateFlush: ${immediateFlush}
      filePattern: ${logsDir}/hibernate.log.${fileRollingPattern}
      policies:
        type: Policies
        size:
          type: SizeBasedTriggeringPolicy
          size: ${sizeRollingSize}
        time:
          type: TimeBasedTriggeringPolicy
          interval: ${timeRollingInterval}
      strategy:
        type: DefaultRolloverStrategy
        max: ${maxRolling}
      PatternLayout:
        pattern: ${defaultLayoutPattern}
    - name: CustomerAppender
      fileName: ${logsDir}/customer.log
      immediateFlush: ${immediateFlush}
      filePattern: ${logsDir}/customer.log.${fileRollingPattern}
      policies:
        type: Policies
        size:
          type: SizeBasedTriggeringPolicy
          size: ${sizeRollingSize}
        time:
          type: TimeBasedTriggeringPolicy
          interval: ${timeRollingInterval}
      strategy:
        type: DefaultRolloverStrategy
        max: ${maxRolling}
      PatternLayout:
        pattern: '%m%n'
    - name: ResourceUsage
      fileName: ${logsDir}/resourceUsage.log
      immediateFlush: ${immediateFlush}
      filePattern: ${logsDir}/resourceUsage.log.${fileRollingPattern}
      policies:
        type: Policies
        size:
          type: SizeBasedTriggeringPolicy
          size: ${sizeRollingSize}
        time:
          type: TimeBasedTriggeringPolicy
          interval: ${timeRollingInterval}
      strategy:
        type: DefaultRolloverStrategy
        max: ${maxRolling}
      PatternLayout:
        pattern: ${defaultLayoutPattern}
    - name: ApplicationMetrics
      fileName: ${logsDir}/metrics.log
      immediateFlush: ${immediateFlush}
      filePattern: ${logsDir}/metrics.log.${fileRollingPattern}
      policies:
        type: Policies
        size:
          type: SizeBasedTriggeringPolicy
          size: ${sizeRollingSize}
        time:
          type: TimeBasedTriggeringPolicy
          interval: ${timeRollingInterval}
      strategy:
        type: DefaultRolloverStrategy
        max: ${maxRolling}
    - name: Connection
      fileName: ${logsDir}/connection.log
      immediateFlush: ${immediateFlush}
      filePattern: ${logsDir}/connection.log.${fileRollingPattern}
      policies:
        type: Policies
        size:
          type: SizeBasedTriggeringPolicy
          size: ${sizeRollingSize}
        time:
          type: TimeBasedTriggeringPolicy
          interval: ${timeRollingInterval}
      strategy:
        type: DefaultRolloverStrategy
        max: ${maxRolling}
      PatternLayout:
        pattern: ${defaultLayoutPattern}
    - name: Amazon
      fileName: ${logsDir}/amazon.log
      immediateFlush: ${immediateFlush}
      filePattern: ${logsDir}/amazon.log.${fileRollingPattern}
      policies:
        type: Policies
        size:
          type: SizeBasedTriggeringPolicy
          size: ${sizeRollingSize}
        time:
          type: TimeBasedTriggeringPolicy
          interval: ${timeRollingInterval}
      strategy:
        type: DefaultRolloverStrategy
        max: ${maxRolling}
      PatternLayout:
        pattern: ${defaultLayoutPattern}
    - name: SubscriptionLog
      fileName: ${logsDir}/subscription.log
      immediateFlush: ${immediateFlush}
      filePattern: ${logsDir}/subscription.log.${fileRollingPattern}
      policies:
        type: Policies
        size:
          type: SizeBasedTriggeringPolicy
          size: ${sizeRollingSize}
        time:
          type: TimeBasedTriggeringPolicy
          interval: ${timeRollingInterval}
      strategy:
        type: DefaultRolloverStrategy
        max: ${maxRolling}
      PatternLayout:
        pattern: ${defaultLayoutPattern}
    - name: IntegrationLog
      fileName: ${logsDir}/integration.log
      immediateFlush: ${immediateFlush}
      filePattern: ${logsDir}/integration.log.${fileRollingPattern}
      policies:
        type: Policies
        size:
          type: SizeBasedTriggeringPolicy
          size: ${sizeRollingSize}
        time:
          type: TimeBasedTriggeringPolicy
          interval: ${timeRollingInterval}
      strategy:
        type: DefaultRolloverStrategy
        max: ${maxRolling}
      PatternLayout:
        pattern: ${defaultLayoutPattern}
    - name: ScheduleLog
      fileName: ${logsDir}/schedule.log
      immediateFlush: ${immediateFlush}
      filePattern: ${logsDir}/schedule.log.${fileRollingPattern}
      policies:
        type: Policies
        size:
          type: SizeBasedTriggeringPolicy
          size: ${sizeRollingSize}
        time:
          type: TimeBasedTriggeringPolicy
          interval: ${timeRollingInterval}
      strategy:
        type: DefaultRolloverStrategy
        max: ${maxRolling}
      PatternLayout:
        pattern: ${defaultLayoutPattern}
    - name: RequestLog
      fileName: ${logsDir}/request.log
      immediateFlush: ${immediateFlush}
      filePattern: ${logsDir}/request.log.${fileRollingPattern}
      policies:
        type: Policies
        size:
          type: SizeBasedTriggeringPolicy
          size: ${sizeRollingSize}
        time:
          type: TimeBasedTriggeringPolicy
          interval: ${timeRollingInterval}
      strategy:
        type: DefaultRolloverStrategy
        max: ${maxRolling}
    - name: CallbackLog
      fileName: ${logsDir}/callback.log
      immediateFlush: ${immediateFlush}
      filePattern: ${logsDir}/callback.log.${fileRollingPattern}
      policies:
        type: Policies
        size:
          type: SizeBasedTriggeringPolicy
          size: ${sizeRollingSize}
        time:
          type: TimeBasedTriggeringPolicy
          interval: ${timeRollingInterval}
      strategy:
        type: DefaultRolloverStrategy
        max: ${maxRolling}
      PatternLayout:
        pattern: ${defaultLayoutPattern}
    - name: HttpServerLog
      fileName: ${logsDir}/httpserver.log
      immediateFlush: ${immediateFlush}
      filePattern: ${logsDir}/httpserver.log.${fileRollingPattern}
      policies:
        type: Policies
        size:
          type: SizeBasedTriggeringPolicy
          size: ${sizeRollingSize}
        time:
          type: TimeBasedTriggeringPolicy
          interval: ${timeRollingInterval}
      strategy:
        type: DefaultRolloverStrategy
        max: ${maxRolling}
      PatternLayout:
        pattern: ${defaultLayoutPattern}
  Loggers:
    logger:
    - name: org.springframework.context.annotation.CommonAnnotationBeanPostProcessor
      level: debug
      additivity: false
      AppenderRef:
        ref: SpringBeanDestroyLogAppender
      appenderRefs: appender
    - name: com.opsgenie.errorlog.listener.LoggerErrorLogListener
      level: warn
      additivity: false
      AppenderRef:
        ref: UnexpectedErrorLog
      appenderRefs: appender
    - name: com.opsgenie.errorlog.listener.LoggerErrorLogListener
      level: warn
      additivity: false
      AppenderRef:
        ref: UnexpectedRawErrorLog
      appenderRefs: appender
    - name: org.hibernate
      level: info
      additivity: false
      AppenderRef:
        ref: HibernateAppender
      appenderRefs: hibernate
    - name: org.hibernate.engine.internal.StatisticalLoggingSessionEventListener
      level: warn
      additivity: false
      AppenderRef:
        ref: HibernateAppender
      appenderRefs: appender
    - name: org.redisson
      level: info
      AppenderRef: null
    - name: com.lambdaworks
      level: info
      AppenderRef: null
    - name: com.mchange
      level: info
      additivity: false
      AppenderRef:
        ref: HibernateAppender
      appenderRefs: appender
    - name: customer
      level: debug
      additivity: false
      AppenderRef:
        ref: CustomerAppender
      appenderRefs: appender
    - name: user.resource
      level: debug
      additivity: false
      AppenderRef:
        ref: ResourceUsage
      appenderRefs: appender
    - name: application.metric
      level: debug
      additivity: false
      AppenderRef:
        ref: ApplicationMetrics
      appenderRefs: appender
    - name: com.ifountain.naas.external.connection
      level: warn
      additivity: false
      AppenderRef:
        ref: Connection
      appenderRefs: appender
    - name: com.amazonaws
      level: warn
      additivity: false
      AppenderRef:
        ref: Amazon
      appenderRefs: appender
    - name: org.apache.http
      level: warn
      additivity: false
      AppenderRef:
        ref: Amazon
      appenderRefs: appender
    - name: org.apache.commons.beanutils.converters
      level: 'off'
      AppenderRef: null
    - name: org.springframework
      level: info
      AppenderRef: null
    - name: com.ifountain.naas.pricing
      level: debug
      additivity: false
      AppenderRef:
        ref: SubscriptionLog
      appenderRefs: appender
    - name: subscription
      level: debug
      additivity: false
      AppenderRef:
        ref: SubscriptionLog
      appenderRefs: appender
    - name: com.ifountain.naas.integration
      level: debug
      additivity: false
      AppenderRef:
        ref: IntegrationLog
      appenderRefs: appender
    - name: com.ifountain.naas.policy
      level: debug
      additivity: false
      AppenderRef:
        ref: IntegrationLog
      appenderRefs: appender
    - name: com.ifountain.naas.schedule
      level: debug
      additivity: false
      AppenderRef:
        ref: ScheduleLog
      appenderRefs: appender
    - name: api.request.log
      level: debug
      additivity: false
      AppenderRef:
        ref: RequestLog
      appenderRefs: appender
    - name: com.ifountain.naas.collector.http.rest.action.webhook
      level: debug
      additivity: false
      AppenderRef:
        ref: IntegrationLog
      appenderRefs: appender
    - name: com.ifountain.naas.collector.http.rest.action.callback
      level: debug
      additivity: false
      AppenderRef:
        ref: CallbackLog
      appenderRefs: appender
    - name: com.ifountain.naas.collector.http.rest.action.alert
      level: debug
      additivity: false
      AppenderRef:
        ref: IntegrationLog
      appenderRefs: appender
    - name: com.ifountain.naas.collector.http.rest.action.marid
      level: debug
      additivity: false
      AppenderRef:
        ref: IntegrationLog
      appenderRefs: appender
    - name: com.ifountain.naas.collector.http
      level: debug
      additivity: false
      AppenderRef:
        ref: HttpServerLog
      appenderRefs: appender
    - name: com.ifountain.naas.collector.http.HttpServerAdapter.request
      level: debug
      additivity: false
      AppenderRef:
        ref: RequestLog
      appenderRefs: appender
    Root:
      level: debug
      AppenderRef:
        ref: CollectorLog
      appenderRefs: appender


