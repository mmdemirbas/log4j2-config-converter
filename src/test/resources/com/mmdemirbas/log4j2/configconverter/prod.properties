name=PropertiesConfig
appenders=collector, springPreDestroy, unexpectedErrorLog, unexpectedRawErrorLog, hibernate, customerLog, resourceUsage, applicationMetric, connection, amazon, subscription, integration, schedule, request, callback, httpserver
loggers=springPreDestroy, unexpectedErrorLog, unexpectedRawErrorLog, hibernate, hibernate2, redisson, lettuce, comMchange, customer, resourceUsage, applicationMetric, connection, amazon, apacheHttp, beanUtilsConverters, spring, pricing, subscription, integration, policy, schedule, request, webhook, callback, alert, marid, httpserver, httpServerAdapter
property.logsDir=logs
property.defaultLayoutPattern=%d{yy/MM/dd HH:mm:ss.SSS} %p: (%F:%L) %m%n
property.immediateFlush=false
property.sizeRollingSize=500MB
property.maxRolling=50
property.fileRollingPattern=%d{yyyy-MM-dd}-%i
property.timeRollingInterval=1
appender.collector.type=RollingFile
appender.collector.name=CollectorLog
appender.collector.layout.type=PatternLayout
appender.collector.layout.pattern=${defaultLayoutPattern}
appender.collector.fileName=${logsDir}/collector.log
appender.collector.immediateFlush=${immediateFlush}
appender.collector.filePattern=${logsDir}/collector.log.${fileRollingPattern}
appender.collector.policies.type=Policies
appender.collector.policies.size.type=SizeBasedTriggeringPolicy
appender.collector.policies.size.size=${sizeRollingSize}
appender.collector.policies.time.type=TimeBasedTriggeringPolicy
appender.collector.policies.time.interval=${timeRollingInterval}
appender.collector.strategy.type=DefaultRolloverStrategy
appender.collector.strategy.max=${maxRolling}
appender.springPreDestroy.type=RollingFile
appender.springPreDestroy.name=SpringBeanDestroyLogAppender
appender.springPreDestroy.layout.type=PatternLayout
appender.springPreDestroy.layout.pattern=${defaultLayoutPattern}
appender.springPreDestroy.filter.alert.type=OgLoggingExceptionToAlertFilter
appender.springPreDestroy.fileName=${logsDir}/collector.log
appender.springPreDestroy.filePattern=${logsDir}/collector.log.${fileRollingPattern}
appender.springPreDestroy.immediateFlush=true
appender.springPreDestroy.policies.type=Policies
appender.springPreDestroy.policies.size.type=SizeBasedTriggeringPolicy
appender.springPreDestroy.policies.size.size=${sizeRollingSize}
appender.springPreDestroy.policies.time.type=TimeBasedTriggeringPolicy
appender.springPreDestroy.policies.time.interval=${timeRollingInterval}
appender.springPreDestroy.strategy.type=DefaultRolloverStrategy
appender.springPreDestroy.strategy.max=${maxRolling}
appender.unexpectedErrorLog.type=RollingFile
appender.unexpectedErrorLog.name=UnexpectedErrorLog
appender.unexpectedErrorLog.layout.type=PatternLayout
appender.unexpectedErrorLog.layout.pattern=${defaultLayoutPattern}
appender.unexpectedErrorLog.fileName=${logsDir}/unexpectedError.log
appender.unexpectedErrorLog.immediateFlush=${immediateFlush}
appender.unexpectedErrorLog.filePattern=${logsDir}/unexpectedError.log.${fileRollingPattern}
appender.unexpectedErrorLog.policies.type=Policies
appender.unexpectedErrorLog.policies.size.type=SizeBasedTriggeringPolicy
appender.unexpectedErrorLog.policies.size.size=${sizeRollingSize}
appender.unexpectedErrorLog.policies.time.type=TimeBasedTriggeringPolicy
appender.unexpectedErrorLog.policies.time.interval=${timeRollingInterval}
appender.unexpectedErrorLog.strategy.type=DefaultRolloverStrategy
appender.unexpectedErrorLog.strategy.max=${maxRolling}
appender.unexpectedRawErrorLog.type=RollingFile
appender.unexpectedRawErrorLog.name=UnexpectedRawErrorLog
appender.unexpectedRawErrorLog.layout.type=PatternLayout
appender.unexpectedRawErrorLog.layout.pattern=${defaultLayoutPattern}
appender.unexpectedRawErrorLog.fileName=${logsDir}/rawUnexpectedError.log
appender.unexpectedRawErrorLog.immediateFlush=${immediateFlush}
appender.unexpectedRawErrorLog.filePattern=${logsDir}/rawUnexpectedError.log.${fileRollingPattern}
appender.unexpectedRawErrorLog.policies.type=Policies
appender.unexpectedRawErrorLog.policies.size.type=SizeBasedTriggeringPolicy
appender.unexpectedRawErrorLog.policies.size.size=${sizeRollingSize}
appender.unexpectedRawErrorLog.policies.time.type=TimeBasedTriggeringPolicy
appender.unexpectedRawErrorLog.policies.time.interval=${timeRollingInterval}
appender.unexpectedRawErrorLog.strategy.type=DefaultRolloverStrategy
appender.unexpectedRawErrorLog.strategy.max=${maxRolling}
appender.hibernate.type=RollingFile
appender.hibernate.name=HibernateAppender
appender.hibernate.layout.type=PatternLayout
appender.hibernate.layout.pattern=${defaultLayoutPattern}
appender.hibernate.fileName=${logsDir}/hibernate.log
appender.hibernate.immediateFlush=${immediateFlush}
appender.hibernate.filePattern=${logsDir}/hibernate.log.${fileRollingPattern}
appender.hibernate.policies.type=Policies
appender.hibernate.policies.size.type=SizeBasedTriggeringPolicy
appender.hibernate.policies.size.size=${sizeRollingSize}
appender.hibernate.policies.time.type=TimeBasedTriggeringPolicy
appender.hibernate.policies.time.interval=${timeRollingInterval}
appender.hibernate.strategy.type=DefaultRolloverStrategy
appender.hibernate.strategy.max=${maxRolling}
appender.customerLog.type=RollingFile
appender.customerLog.name=CustomerAppender
appender.customerLog.layout.type=PatternLayout
appender.customerLog.layout.pattern=%m%n
appender.customerLog.fileName=${logsDir}/customer.log
appender.customerLog.immediateFlush=${immediateFlush}
appender.customerLog.filePattern=${logsDir}/customer.log.${fileRollingPattern}
appender.customerLog.policies.type=Policies
appender.customerLog.policies.size.type=SizeBasedTriggeringPolicy
appender.customerLog.policies.size.size=${sizeRollingSize}
appender.customerLog.policies.time.type=TimeBasedTriggeringPolicy
appender.customerLog.policies.time.interval=${timeRollingInterval}
appender.customerLog.strategy.type=DefaultRolloverStrategy
appender.customerLog.strategy.max=${maxRolling}
appender.resourceUsage.type=RollingFile
appender.resourceUsage.name=ResourceUsage
appender.resourceUsage.layout.type=PatternLayout
appender.resourceUsage.layout.pattern=${defaultLayoutPattern}
appender.resourceUsage.fileName=${logsDir}/resourceUsage.log
appender.resourceUsage.immediateFlush=${immediateFlush}
appender.resourceUsage.filePattern=${logsDir}/resourceUsage.log.${fileRollingPattern}
appender.resourceUsage.policies.type=Policies
appender.resourceUsage.policies.size.type=SizeBasedTriggeringPolicy
appender.resourceUsage.policies.size.size=${sizeRollingSize}
appender.resourceUsage.policies.time.type=TimeBasedTriggeringPolicy
appender.resourceUsage.policies.time.interval=${timeRollingInterval}
appender.resourceUsage.strategy.type=DefaultRolloverStrategy
appender.resourceUsage.strategy.max=${maxRolling}
appender.applicationMetric.type=RollingFile
appender.applicationMetric.name=ApplicationMetrics
appender.applicationMetric.layout.type=OgJsonLayout
appender.applicationMetric.fileName=${logsDir}/metrics.log
appender.applicationMetric.immediateFlush=${immediateFlush}
appender.applicationMetric.filePattern=${logsDir}/metrics.log.${fileRollingPattern}
appender.applicationMetric.policies.type=Policies
appender.applicationMetric.policies.size.type=SizeBasedTriggeringPolicy
appender.applicationMetric.policies.size.size=${sizeRollingSize}
appender.applicationMetric.policies.time.type=TimeBasedTriggeringPolicy
appender.applicationMetric.policies.time.interval=${timeRollingInterval}
appender.applicationMetric.strategy.type=DefaultRolloverStrategy
appender.applicationMetric.strategy.max=${maxRolling}
appender.connection.type=RollingFile
appender.connection.name=Connection
appender.connection.layout.type=PatternLayout
appender.connection.layout.pattern=${defaultLayoutPattern}
appender.connection.fileName=${logsDir}/connection.log
appender.connection.immediateFlush=${immediateFlush}
appender.connection.filePattern=${logsDir}/connection.log.${fileRollingPattern}
appender.connection.policies.type=Policies
appender.connection.policies.size.type=SizeBasedTriggeringPolicy
appender.connection.policies.size.size=${sizeRollingSize}
appender.connection.policies.time.type=TimeBasedTriggeringPolicy
appender.connection.policies.time.interval=${timeRollingInterval}
appender.connection.strategy.type=DefaultRolloverStrategy
appender.connection.strategy.max=${maxRolling}
appender.amazon.type=RollingFile
appender.amazon.name=Amazon
appender.amazon.layout.type=PatternLayout
appender.amazon.layout.pattern=${defaultLayoutPattern}
appender.amazon.fileName=${logsDir}/amazon.log
appender.amazon.immediateFlush=${immediateFlush}
appender.amazon.filePattern=${logsDir}/amazon.log.${fileRollingPattern}
appender.amazon.policies.type=Policies
appender.amazon.policies.size.type=SizeBasedTriggeringPolicy
appender.amazon.policies.size.size=${sizeRollingSize}
appender.amazon.policies.time.type=TimeBasedTriggeringPolicy
appender.amazon.policies.time.interval=${timeRollingInterval}
appender.amazon.strategy.type=DefaultRolloverStrategy
appender.amazon.strategy.max=${maxRolling}
appender.subscription.type=RollingFile
appender.subscription.name=SubscriptionLog
appender.subscription.layout.type=PatternLayout
appender.subscription.layout.pattern=${defaultLayoutPattern}
appender.subscription.fileName=${logsDir}/subscription.log
appender.subscription.immediateFlush=${immediateFlush}
appender.subscription.filePattern=${logsDir}/subscription.log.${fileRollingPattern}
appender.subscription.policies.type=Policies
appender.subscription.policies.size.type=SizeBasedTriggeringPolicy
appender.subscription.policies.size.size=${sizeRollingSize}
appender.subscription.policies.time.type=TimeBasedTriggeringPolicy
appender.subscription.policies.time.interval=${timeRollingInterval}
appender.subscription.strategy.type=DefaultRolloverStrategy
appender.subscription.strategy.max=${maxRolling}
appender.integration.type=RollingFile
appender.integration.name=IntegrationLog
appender.integration.layout.type=PatternLayout
appender.integration.layout.pattern=${defaultLayoutPattern}
appender.integration.fileName=${logsDir}/integration.log
appender.integration.immediateFlush=${immediateFlush}
appender.integration.filePattern=${logsDir}/integration.log.${fileRollingPattern}
appender.integration.policies.type=Policies
appender.integration.policies.size.type=SizeBasedTriggeringPolicy
appender.integration.policies.size.size=${sizeRollingSize}
appender.integration.policies.time.type=TimeBasedTriggeringPolicy
appender.integration.policies.time.interval=${timeRollingInterval}
appender.integration.strategy.type=DefaultRolloverStrategy
appender.integration.strategy.max=${maxRolling}
appender.schedule.type=RollingFile
appender.schedule.name=ScheduleLog
appender.schedule.layout.type=PatternLayout
appender.schedule.layout.pattern=${defaultLayoutPattern}
appender.schedule.fileName=${logsDir}/schedule.log
appender.schedule.immediateFlush=${immediateFlush}
appender.schedule.filePattern=${logsDir}/schedule.log.${fileRollingPattern}
appender.schedule.policies.type=Policies
appender.schedule.policies.size.type=SizeBasedTriggeringPolicy
appender.schedule.policies.size.size=${sizeRollingSize}
appender.schedule.policies.time.type=TimeBasedTriggeringPolicy
appender.schedule.policies.time.interval=${timeRollingInterval}
appender.schedule.strategy.type=DefaultRolloverStrategy
appender.schedule.strategy.max=${maxRolling}
appender.request.type=RollingFile
appender.request.name=RequestLog
appender.request.layout.type=OgJsonLayout
appender.request.fileName=${logsDir}/request.log
appender.request.immediateFlush=${immediateFlush}
appender.request.filePattern=${logsDir}/request.log.${fileRollingPattern}
appender.request.policies.type=Policies
appender.request.policies.size.type=SizeBasedTriggeringPolicy
appender.request.policies.size.size=${sizeRollingSize}
appender.request.policies.time.type=TimeBasedTriggeringPolicy
appender.request.policies.time.interval=${timeRollingInterval}
appender.request.strategy.type=DefaultRolloverStrategy
appender.request.strategy.max=${maxRolling}
appender.callback.type=RollingFile
appender.callback.name=CallbackLog
appender.callback.layout.type=PatternLayout
appender.callback.layout.pattern=${defaultLayoutPattern}
appender.callback.fileName=${logsDir}/callback.log
appender.callback.immediateFlush=${immediateFlush}
appender.callback.filePattern=${logsDir}/callback.log.${fileRollingPattern}
appender.callback.policies.type=Policies
appender.callback.policies.size.type=SizeBasedTriggeringPolicy
appender.callback.policies.size.size=${sizeRollingSize}
appender.callback.policies.time.type=TimeBasedTriggeringPolicy
appender.callback.policies.time.interval=${timeRollingInterval}
appender.callback.strategy.type=DefaultRolloverStrategy
appender.callback.strategy.max=${maxRolling}
appender.httpserver.type=RollingFile
appender.httpserver.name=HttpServerLog
appender.httpserver.layout.type=PatternLayout
appender.httpserver.layout.pattern=${defaultLayoutPattern}
appender.httpserver.fileName=${logsDir}/httpserver.log
appender.httpserver.immediateFlush=${immediateFlush}
appender.httpserver.filePattern=${logsDir}/httpserver.log.${fileRollingPattern}
appender.httpserver.policies.type=Policies
appender.httpserver.policies.size.type=SizeBasedTriggeringPolicy
appender.httpserver.policies.size.size=${sizeRollingSize}
appender.httpserver.policies.time.type=TimeBasedTriggeringPolicy
appender.httpserver.policies.time.interval=${timeRollingInterval}
appender.httpserver.strategy.type=DefaultRolloverStrategy
appender.httpserver.strategy.max=${maxRolling}
logger.springPreDestroy.name=org.springframework.context.annotation.CommonAnnotationBeanPostProcessor
logger.springPreDestroy.level=debug
logger.springPreDestroy.additivity=false
logger.springPreDestroy.appenderRef.appender.ref=SpringBeanDestroyLogAppender
logger.springPreDestroy.appenderRefs=appender
logger.unexpectedErrorLog.name=com.opsgenie.errorlog.listener.LoggerErrorLogListener
logger.unexpectedErrorLog.level=warn
logger.unexpectedErrorLog.additivity=false
logger.unexpectedErrorLog.appenderRef.appender.ref=UnexpectedErrorLog
logger.unexpectedErrorLog.appenderRefs=appender
logger.unexpectedRawErrorLog.name=com.opsgenie.errorlog.listener.LoggerErrorLogListener
logger.unexpectedRawErrorLog.level=warn
logger.unexpectedRawErrorLog.additivity=false
logger.unexpectedRawErrorLog.appenderRef.appender.ref=UnexpectedRawErrorLog
logger.unexpectedRawErrorLog.appenderRefs=appender
logger.hibernate.name=org.hibernate
logger.hibernate.level=info
logger.hibernate.additivity=false
logger.hibernate.appenderRef.hibernate.ref=HibernateAppender
logger.hibernate.appenderRefs=hibernate
logger.hibernate2.name=org.hibernate.engine.internal.StatisticalLoggingSessionEventListener
logger.hibernate2.level=warn
logger.hibernate2.additivity=false
logger.hibernate2.appenderRef.appender.ref=HibernateAppender
logger.hibernate2.appenderRefs=appender
logger.redisson.name=org.redisson
logger.redisson.level=info
logger.lettuce.name=com.lambdaworks
logger.lettuce.level=info
logger.comMchange.name=com.mchange
logger.comMchange.level=info
logger.comMchange.additivity=false
logger.comMchange.appenderRef.appender.ref=HibernateAppender
logger.comMchange.appenderRefs=appender
logger.customer.name=customer
logger.customer.level=debug
logger.customer.additivity=false
logger.customer.appenderRef.appender.ref=CustomerAppender
logger.customer.appenderRefs=appender
logger.resourceUsage.name=user.resource
logger.resourceUsage.level=debug
logger.resourceUsage.additivity=false
logger.resourceUsage.appenderRef.appender.ref=ResourceUsage
logger.resourceUsage.appenderRefs=appender
logger.applicationMetric.name=application.metric
logger.applicationMetric.level=debug
logger.applicationMetric.additivity=false
logger.applicationMetric.appenderRef.appender.ref=ApplicationMetrics
logger.applicationMetric.appenderRefs=appender
logger.connection.name=com.ifountain.naas.external.connection
logger.connection.level=warn
logger.connection.additivity=false
logger.connection.appenderRef.appender.ref=Connection
logger.connection.appenderRefs=appender
logger.amazon.name=com.amazonaws
logger.amazon.level=warn
logger.amazon.additivity=false
logger.amazon.appenderRef.appender.ref=Amazon
logger.amazon.appenderRefs=appender
logger.apacheHttp.name=org.apache.http
logger.apacheHttp.level=warn
logger.apacheHttp.additivity=false
logger.apacheHttp.appenderRef.appender.ref=Amazon
logger.apacheHttp.appenderRefs=appender
logger.beanUtilsConverters.name=org.apache.commons.beanutils.converters
logger.beanUtilsConverters.level=off
logger.spring.name=org.springframework
logger.spring.level=info
logger.pricing.name=com.ifountain.naas.pricing
logger.pricing.level=debug
logger.pricing.additivity=false
logger.pricing.appenderRef.appender.ref=SubscriptionLog
logger.pricing.appenderRefs=appender
logger.subscription.name=subscription
logger.subscription.level=debug
logger.subscription.additivity=false
logger.subscription.appenderRef.appender.ref=SubscriptionLog
logger.subscription.appenderRefs=appender
logger.integration.name=com.ifountain.naas.integration
logger.integration.level=debug
logger.integration.additivity=false
logger.integration.appenderRef.appender.ref=IntegrationLog
logger.integration.appenderRefs=appender
logger.policy.name=com.ifountain.naas.policy
logger.policy.level=debug
logger.policy.additivity=false
logger.policy.appenderRef.appender.ref=IntegrationLog
logger.policy.appenderRefs=appender
logger.schedule.name=com.ifountain.naas.schedule
logger.schedule.level=debug
logger.schedule.additivity=false
logger.schedule.appenderRef.appender.ref=ScheduleLog
logger.schedule.appenderRefs=appender
logger.request.name=api.request.log
logger.request.level=debug
logger.request.additivity=false
logger.request.appenderRef.appender.ref=RequestLog
logger.request.appenderRefs=appender
logger.webhook.name=com.ifountain.naas.collector.http.rest.action.webhook
logger.webhook.level=debug
logger.webhook.additivity=false
logger.webhook.appenderRef.appender.ref=IntegrationLog
logger.webhook.appenderRefs=appender
logger.callback.name=com.ifountain.naas.collector.http.rest.action.callback
logger.callback.level=debug
logger.callback.additivity=false
logger.callback.appenderRef.appender.ref=CallbackLog
logger.callback.appenderRefs=appender
logger.alert.name=com.ifountain.naas.collector.http.rest.action.alert
logger.alert.level=debug
logger.alert.additivity=false
logger.alert.appenderRef.appender.ref=IntegrationLog
logger.alert.appenderRefs=appender
logger.marid.name=com.ifountain.naas.collector.http.rest.action.marid
logger.marid.level=debug
logger.marid.additivity=false
logger.marid.appenderRef.appender.ref=IntegrationLog
logger.marid.appenderRefs=appender
logger.httpserver.name=com.ifountain.naas.collector.http
logger.httpserver.level=debug
logger.httpserver.additivity=false
logger.httpserver.appenderRef.appender.ref=HttpServerLog
logger.httpserver.appenderRefs=appender
logger.httpServerAdapter.name=com.ifountain.naas.collector.http.HttpServerAdapter.request
logger.httpServerAdapter.level=debug
logger.httpServerAdapter.additivity=false
logger.httpServerAdapter.appenderRef.appender.ref=RequestLog
logger.httpServerAdapter.appenderRefs=appender
rootLogger.level=debug
rootLogger.appenderRef.appender.ref=CollectorLog
rootLogger.appenderRefs=appender
